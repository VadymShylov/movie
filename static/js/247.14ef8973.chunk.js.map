{"version":3,"file":"static/js/247.14ef8973.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/apiService.js","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/image/dist/chunk-SMHKDLMK.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getCast } from 'services/apiService';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Image,\n  SimpleGrid,\n  Text,\n} from '@chakra-ui/react';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(res => setCast(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <SimpleGrid columns={[1, 2, 3, 4]} spacing={[4, null, 6]} py=\"4\">\n          {cast.map(\n            el =>\n              el.profile_path && (\n                <Card\n                  maxW=\"sm\"\n                  bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                  key={el.credit_id}\n                >\n                  <CardBody>\n                    {el.profile_path && (\n                      <Image\n                        src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                        alt={el.name}\n                        objectFit=\"cover\"\n                        maxW={{ base: '100%' }}\n                      />\n                    )}\n                    <Heading size=\"md\" mt=\"10\" mb=\"10\">\n                      {el.name}\n                    </Heading>\n                    <Text fontSize=\"md\">Character: {el.character}</Text>\n                  </CardBody>\n                </Card>\n              )\n          )}\n        </SimpleGrid>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '8e2fb907069148c42f6ab71ddac5af47';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","then","res","catch","err","console","log","length","columns","spacing","py","map","el","profile_path","maxW","bgGradient","src","alt","name","objectFit","base","size","mt","mb","fontSize","character","credit_id","URL","KEY","getTrendingFilms","axios","response","data","getFullInfoById","id","getReviews","results","getFilmsBySearch","query","params","api_key","Object","freeze","mapResponsive","prop","mapper","Array","isArray","item","isObject","keys","reduce","result","key","createStylesContext","CardStylesProvider","useCardStyles","CardBody","forwardRef","props","ref","className","rest","styles","jsx","chakra","cx","__css","body","Card","omitThemingProps","children","direction","justify","align","useMultiStyleConfig","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","value","NativeImage","htmlWidth","htmlHeight","width","height","displayName","Image","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectPosition","object","keysToOmit","clone","assign","omit","as","Heading","useStyleConfig","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","SimpleGrid","count","spacingX","spacingY","minChildWidth","theme","useTheme","n","_value","getToken","widthToColumns"],"sourceRoot":""}