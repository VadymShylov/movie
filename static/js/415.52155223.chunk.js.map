{"version":3,"file":"static/js/415.52155223.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/apiService.js","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  CardBody,\n  Heading,\n  Image,\n  SimpleGrid,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nconst MoviesList = ({ title, films }) => {\n  const location = useLocation();\n\n  return (\n    <Box as=\"section\" p={[15, null, 30]}>\n      {title && (\n        <Text\n          bgGradient=\"linear(to-br, brand.100, brand.200)\"\n          bgClip=\"text\"\n          fontSize={['4xl', '5xl', '6xl']}\n          fontWeight=\"extrabold\"\n        >\n          {title}\n        </Text>\n      )}\n      <SimpleGrid columns={[1, 2, 3, 4]} spacing={[4, null, 6]} py=\"4\">\n        {films.map(({ poster_path, title, id }) => (\n          <Card\n            maxW=\"sm\"\n            bgGradient=\"linear(to-br, brand.100, brand.200)\"\n            key={id}\n            _hover={{\n              transform: 'scale(1.04)',\n              shadow: '1px 1px 15px 1px ',\n            }}\n            transition={' transform 250ms cubic-bezier(0.4, 0, 0.2, 1)'}\n          >\n            <CardBody>\n              <Stack mt=\"6\" spacing={2}>\n                <Link to={`/movies/${id}`} state={location}>\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w342/${\n                      poster_path === null\n                        ? 'd8duYyyC9J5T825Hg7grmaabfxQ.jpg'\n                        : poster_path\n                    }`}\n                    alt={title}\n                    width=\"342px\"\n                    borderRadius=\"lg\"\n                  />\n                  <Heading size=\"md\" color=\"brand.400\">\n                    {title}\n                  </Heading>\n                </Link>\n              </Stack>\n            </CardBody>\n          </Card>\n        ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrendingFilms } from '../services/apiService';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n\n  useEffect(() => {\n    getTrendingFilms()\n      .then(res => setTrendingFilms(res.results))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <MoviesList title={'Trending today'} films={trendingFilms} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '8e2fb907069148c42f6ab71ddac5af47';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n"],"names":["title","films","location","useLocation","as","p","bgGradient","bgClip","fontSize","fontWeight","columns","spacing","py","map","poster_path","id","maxW","_hover","transform","shadow","transition","mt","to","state","src","alt","width","borderRadius","size","color","useState","trendingFilms","setTrendingFilms","useEffect","getTrendingFilms","then","res","results","catch","err","console","log","URL","KEY","axios","response","data","getFullInfoById","getCast","cast","getReviews","getFilmsBySearch","query","params","api_key","Heading","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","jsx","chakra","cx","__css","displayName"],"sourceRoot":""}