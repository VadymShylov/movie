{"version":3,"file":"static/js/879.60b3aeb0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/AdditionalInfoNav/AdditionalInfoNav.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails.jsx","services/apiService.js","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gooey\":\"Loader_gooey__33+Wh\",\"dot\":\"Loader_dot__7Nm3P\",\"dots\":\"Loader_dots__0UTNN\"};","import s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.gooey}>\n      <span className={s.dot}></span>\n      <div className={s.dots}>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { NavLink } from 'react-router-dom';\nimport { Container, Text } from '@chakra-ui/react';\n\nconst navItems = [\n  { href: 'cast', text: ' Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst AdditionalInfoNav = () => {\n  return (\n    <Container maxW=\"container.lg\">\n      <Text\n        bgGradient=\"linear(to-br, brand.100, brand.200)\"\n        bgClip=\"text\"\n        fontSize={['18', '26', '32']}\n        fontWeight=\"extrabold\"\n        marginBottom=\"10px\"\n        marginTop=\"10px\"\n      >\n        Additional information\n      </Text>\n      {navItems.map(({ text, href }) => (\n        <NavLink\n          key={href}\n          to={href}\n          style={({ isActive }) => {\n            return {\n              color: isActive ? '#417d71' : '#97b4a6',\n            };\n          }}\n        >\n          <Text\n            fontSize={[16, 23, 26]}\n            fontWeight={[400, null, 600]}\n            letterSpacing={[1.1, null, 1.3]}\n          >\n            {text}\n          </Text>\n        </NavLink>\n      ))}\n    </Container>\n  );\n};\n\nexport default AdditionalInfoNav;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  Container,\n  Image,\n  SimpleGrid,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nconst MovieDetails = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movie.length !== 0 && (\n        <Container maxW=\"container.lg\">\n          <Link to={location.state ?? '/'}>\n            <Button\n              variant=\"ghost\"\n              color=\"brand.200\"\n              fontSize={[15, 20, 20]}\n              type=\"button\"\n              mb=\"2px\"\n              _hover={{\n                shadow: '1px 1px 15px 1px ',\n                bg: 'brand.200',\n                color: 'brand.100',\n                border: '1px solid brand.100',\n              }}\n            >\n              Go back\n            </Button>\n          </Link>\n          <Card\n            direction={{ base: 'column', sm: 'row' }}\n            overflow=\"hidden\"\n            variant=\"outline\"\n            mt={2}\n          >\n            {movie.poster_path && (\n              <Image\n                objectFit=\"cover\"\n                maxW={{ base: '100%', sm: '250px' }}\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            )}\n            <Stack>\n              <CardBody>\n                <Text\n                  bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                  bgClip=\"text\"\n                  fontSize={['18', '26', '32']}\n                  fontWeight=\"extrabold\"\n                >\n                  {movie.title}\n                </Text>\n                <Text py=\"2\">\n                  User Score: {Math.round(movie.vote_average) * 10}%\n                </Text>\n                <Text\n                  bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                  bgClip=\"text\"\n                  fontSize={['18', '26', '32']}\n                  fontWeight=\"extrabold\"\n                >\n                  Overview:\n                </Text>\n                <Text py=\"2\">{movie.overview}</Text>\n                <Box>\n                  <Text\n                    bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                    bgClip=\"text\"\n                    fontSize={['18', '26', '32']}\n                    fontWeight=\"extrabold\"\n                  >\n                    Genres:{' '}\n                  </Text>\n                  <SimpleGrid\n                    columns={[1, 2, 4, 4]}\n                    spacing={[4, null, 6]}\n                    py=\"4\"\n                  >\n                    {movie.genres &&\n                      movie.genres.map(genre => (\n                        <Stack key={genre.id}>\n                          <Text size=\"ls\">{genre.name}</Text>\n                        </Stack>\n                      ))}\n                  </SimpleGrid>\n                </Box>\n              </CardBody>\n            </Stack>\n          </Card>\n        </Container>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n","import AdditionalInfoNav from 'components/AdditionalInfoNav/AdditionalInfoNav';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getFullInfoById } from '../services/apiService';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetailsInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  console.log(movie);\n  useEffect(() => {\n    getFullInfoById(movieId)\n      .then(setMovie)\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieDetails movie={movie} />}\n      <AdditionalInfoNav />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsInfo;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '8e2fb907069148c42f6ab71ddac5af47';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["className","s","navItems","href","text","maxW","bgGradient","bgClip","fontSize","fontWeight","marginBottom","marginTop","map","to","style","color","isActive","letterSpacing","movie","location","useLocation","length","state","variant","type","mb","_hover","shadow","bg","border","direction","base","sm","overflow","mt","poster_path","objectFit","src","alt","title","py","Math","round","vote_average","overview","columns","spacing","genres","genre","size","name","id","movieId","useParams","useState","setMovie","console","log","useEffect","getFullInfoById","then","catch","err","Suspense","fallback","Loader","URL","KEY","getTrendingFilms","axios","response","data","getCast","cast","getReviews","results","getFilmsBySearch","query","params","api_key","createContext","strict","useButtonGroup","ButtonIcon","props","children","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","Spinner","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","Button","forwardRef","ref","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","leftIcon","rightIcon","loadingText","iconSpacing","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","value","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Container","centerContent","flexDirection","assignRef","current","error","Error","mergeRefs","refs","forEach"],"sourceRoot":""}